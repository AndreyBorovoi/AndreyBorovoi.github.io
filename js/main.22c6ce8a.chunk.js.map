{"version":3,"sources":["components/Header.js","creators.js","actions.js","components/Timer.js","components/Score.js","components/GamePanel.js","components/AppCard.js","components/Canvas.js","components/Difficulty.js","components/CanvasBeforeGame.js","components/Field.js","createCards.js","reducers.js","App.js","serviceWorker.js","index.js"],"names":["Header","AppBar","position","Toolbar","Typography","variant","style","display","flexGrow","Component","changeGameStatus","onGame","type","Timer","props","tick","bind","nextProps","nextState","time","this","changeTime","timer","setInterval","clearInterval","Date","valueOf","startTime","toFixed","connect","state","App","dispatch","Score","score","GamePanel","Grid","container","direction","justify","alignItems","AppCard","onClick","e","cardState","changeCardState","id","setTimeout","inner","width","newWidth","parseFloat","slice","length","component","backgroundColor","color","height","className","Card","CardActionArea","Canvas","card_ids","Array","from","cards","keys","ended","i","get","Number","flexDirection","marginTop","justifyContent","GridList","cols","sizeX","margin","map","key","value","Difficulty","handleChange","event","changeDifficult","target","FormControl","size","FormLabel","gutterBottom","RadioGroup","difficult","onChange","row","FormControlLabel","control","Radio","label","CanvasBeforeGame","localStorage","getItem","setItem","createNewCards","Button","gameStatus","sizeY","Field","randomInteger","min","max","rand","Math","random","floor","decToHex","n","toString","generateCarts","colors","Set","add","array","j","shuffle","Map","set","init_app_state","MemoApp","combineReducers","action","newState","entries","opened","values","card","round","sqrt","store","createStore","Container","fixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.22c6ce8a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nclass Header extends Component{\r\n  render() {\r\n    return (\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n\r\n          <Typography variant='h6' style={{display:'flex', flexGrow:1}}>\r\n            MemoGame\r\n          </Typography>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import {CHANGE_DIFFICULT, CHANGE_TIME, CHANGE_GAME_STATUS,\r\n   CREATE_NEW_CARDS, CHANGE_CARD_STATE} from './actions';\r\n\r\nexport function changeDifficult(difficult){\r\n  return {type: CHANGE_DIFFICULT, difficult};\r\n}\r\n\r\nexport function changeTime(time){\r\n  return {type: CHANGE_TIME, time};\r\n}\r\n\r\nexport function changeGameStatus(onGame){\r\n  return {type: CHANGE_GAME_STATUS, onGame};\r\n}\r\n\r\nexport function createNewCards(){\r\n  return {type: CREATE_NEW_CARDS};\r\n}\r\n\r\nexport function changeCardState(id){\r\n  return {type: CHANGE_CARD_STATE, id};\r\n}\r\n","export const CHANGE_DIFFICULT = 'CHANGE_DIFFICULT';\r\nexport const CHANGE_TIME = 'CHANGE_TIME';\r\nexport const CHANGE_GAME_STATUS = 'CHANGE_GAME_STATUS';\r\nexport const CREATE_NEW_CARDS = 'CREATE_NEW_CARDS';\r\nexport const CHANGE_CARD_STATE = 'CHANGE_CARD_STATE';\r\n","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {changeTime} from '../creators';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Timer extends Component{\r\n  constructor(props){\r\n     super(props);\r\n     this.tick = this.tick.bind(this);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    if(nextProps.time !== this.props.time){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.changeTime(0);\r\n    this.timer = setInterval(this.tick, 50);\r\n  }\r\n  componentWillUnmount(){\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  tick(){\r\n    let time = (new Date().valueOf() - this.props.startTime)/1000;\r\n    this.props.changeTime(time);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Typography variant='h4'>{this.props.time.toFixed(1)}</Typography>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    time: state.App.time,\r\n    startTime: state.App.startTime,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeTime: (time) => dispatch(changeTime(time)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\r\n","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass Score extends Component{\r\n  render() {\r\n    return (\r\n      <Typography variant='h4'>{this.props.score}</Typography>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    score: state.App.score\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Score);\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Timer from './Timer';\r\nimport Score from './Score';\r\n\r\n\r\nexport default function GamePanel() {\r\n  return (\r\n    <div>\r\n      <Grid container\r\n        direction='row'\r\n        justify='space-evenly'\r\n        alignItems='center'\r\n        style={{display:'flex', flexGrow:0}}\r\n      >\r\n        <Timer/>\r\n        <Score/>\r\n\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, {Component}  from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n\r\nimport {changeCardState} from '../creators';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './AppCard.css';\r\n\r\n// Состояния карточки\r\nexport const CARD_OPEN = 'CARD_OPEN';\r\nexport const CARD_CLOSE = 'CARD_CLOSE';\r\nexport const CARD_DELETED = 'CARD_DELETED';\r\nexport const CARD_DELETING = 'CARD_DELETING';\r\nexport const CARD_CLOSING = 'CARD_CLOSING';\r\n\r\nclass AppCard extends Component{\r\n  constructor(props){\r\n     super(props);\r\n     this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick(e){\r\n    if(this.props.cardState === CARD_CLOSE){\r\n      this.props.changeCardState(this.props.id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(this.props.cardState === CARD_DELETING ||\r\n       this.props.cardState === CARD_CLOSING){\r\n      setTimeout(() => {\r\n        if(this.props.cardState === CARD_DELETING ||\r\n           this.props.cardState === CARD_CLOSING){\r\n          this.props.changeCardState(this.props.id);\r\n        }\r\n      }, 500);\r\n    }\r\n    let width = this.props.style.width;\r\n    let newWidth = parseFloat(width.slice(0, width.length-1)) - 2;\r\n    newWidth = newWidth + '%';\r\n    let inner;\r\n    switch (this.props.cardState) {\r\n      case CARD_DELETING:\r\n      case CARD_CLOSING:\r\n      case CARD_OPEN:\r\n        inner = (\r\n          <Typography\r\n            component='div'\r\n            style={{backgroundColor: this.props.color,\r\n              height: '100%', width:'100%'}}/>);\r\n        break;\r\n      case CARD_CLOSE:\r\n        inner = (\r\n          <div\r\n            className='CloseAppCard'\r\n            style={{height: '100%', width:'100%'}}/>\r\n        )\r\n        break;\r\n      case CARD_DELETED:\r\n        return (\r\n          <div\r\n            className='DeletedAppCard CardHeight'\r\n            style={{width: newWidth}}/>\r\n        )\r\n      default:\r\n        return <>error</>;\r\n      }\r\n    return (\r\n      <Card\r\n        className='AppCard CardHeight'\r\n        style={{width: newWidth}}\r\n        onClick={this.onClick}>\r\n        <CardActionArea\r\n          style={{width:'100%', height:'100%'}}\r\n        >\r\n          {inner}\r\n        </CardActionArea>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeCardState: (id) => dispatch(changeCardState(id)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AppCard);\r\n","import React, {Component} from 'react';\r\nimport GridList from '@material-ui/core/GridList';\r\n\r\nimport {changeGameStatus} from '../creators';\r\nimport { connect } from 'react-redux';\r\n\r\nimport GamePanel from './GamePanel';\r\nimport AppCard, {CARD_DELETED}  from './AppCard';\r\n\r\n\r\nclass Canvas extends Component{\r\n  render() {\r\n    let card_ids = Array.from(this.props.cards.keys());\r\n    let ended = true;\r\n    for(let i in card_ids){\r\n      if((this.props.cards.get(Number(i))).cardState !== CARD_DELETED){\r\n        ended = false;\r\n      }\r\n    }\r\n    if(ended){\r\n      this.props.changeGameStatus(false);\r\n    }\r\n    return (\r\n      <div\r\n        style={{display:'flex', flexDirection:'column', width:'100%', marginTop:'20px'}}\r\n      >\r\n\r\n        <GamePanel/>\r\n\r\n        <div\r\n          style={{display:'flex', width:'100%', justifyContent:'center', marginTop:'20px'}}\r\n        >\r\n          <GridList\r\n            cols={this.props.sizeX}\r\n            style={{width:'90%', margin:'0px', display:'flex',\r\n              justifyContent:'space-between'}}\r\n          >\r\n            {card_ids.map((id)=>\r\n              <AppCard\r\n                key={id}\r\n                id={id}\r\n                color={this.props.cards.get(id).color}\r\n                cardState={this.props.cards.get(id).cardState}\r\n              />\r\n            )}\r\n          </GridList>\r\n        </div>\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    sizeX: state.App.sizeX,\r\n    cards: state.App.cards,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeGameStatus: (value) => dispatch(changeGameStatus(value)),\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);\r\n","import React, {Component}  from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {changeDifficult} from '../creators';\r\nimport { connect } from 'react-redux';\r\n\r\nexport const EASY = 'easy';\r\nexport const MEDIUM = 'medium';\r\nexport const HARD = 'hard';\r\n\r\nclass Difficulty extends Component{\r\n  constructor(props){\r\n     super(props);\r\n     this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event){\r\n    this.props.changeDifficult(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FormControl\r\n        component='fieldset'\r\n        size='small'\r\n        style={{marginTop:'50px'}}\r\n      >\r\n        <FormLabel component='legend' style={{margin:'auto'}}>\r\n          <Typography variant=\"h5\" color='textPrimary' gutterBottom>\r\n            Сложность\r\n          </Typography>\r\n        </FormLabel>\r\n\r\n        <RadioGroup\r\n          value={this.props.difficult}\r\n          onChange={this.handleChange}\r\n          row={false}\r\n        >\r\n\r\n          <FormControlLabel value={EASY} control={<Radio />} label='Легко'/>\r\n          <FormControlLabel value={MEDIUM} control={<Radio />} label='Средне' />\r\n          <FormControlLabel value={HARD} control={<Radio />} label='Сложно' />\r\n\r\n        </RadioGroup>\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    difficult: state.App.difficult\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeDifficult: (value) => dispatch(changeDifficult(value)),\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Difficulty);\r\n","import React, {Component} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {changeGameStatus, createNewCards} from '../creators';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Difficulty from './Difficulty';\r\n\r\nclass CanvasBeforeGame extends Component{\r\n  constructor(props){\r\n     super(props);\r\n     this.onClick = this.onClick.bind(this);\r\n     if(!localStorage.getItem('bestGameScore')){\r\n       localStorage.setItem('bestGameScore', 0);\r\n     }\r\n     if(!localStorage.getItem('lastGameScore')){\r\n       localStorage.setItem('lastGameScore', 0);\r\n     }\r\n  }\r\n\r\n  onClick(e){\r\n    this.props.changeGameStatus(true);\r\n    this.props.createNewCards();\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <Grid container\r\n          direction='column'\r\n          justify='space-evenly'\r\n          alignItems='center'\r\n        >\r\n            <Difficulty/>\r\n\r\n            <div>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Предыдущий счет: {localStorage.getItem('lastGameScore')}\r\n              </Typography>\r\n\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Лучший счет: {localStorage.getItem('bestGameScore')}\r\n              </Typography>\r\n            </div>\r\n\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              style={{marginTop:'50px'}}\r\n              onClick={this.onClick}\r\n            >\r\n              Начать игру\r\n            </Button>\r\n        </Grid>\r\n            )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    gameStatus: state.App.gameStatus,\r\n    sizeX: state.App.sizeX,\r\n    sizeY: state.App.sizeY\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeGameStatus: (value) => dispatch(changeGameStatus(value)),\r\n    createNewCards: () => dispatch(createNewCards()),\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CanvasBeforeGame);\r\n","import React, {Component} from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport Canvas from './Canvas';\r\nimport CanvasBeforeGame from './CanvasBeforeGame';\r\n\r\nclass Field extends Component{\r\n\r\n  render() {\r\n    if(this.props.gameStatus){\r\n      return <div style={{display:'flex', flexGrow:1}}><Canvas/></div>\r\n    }\r\n    else{\r\n      return <div style={{display:'flex', flexGrow:1}}><CanvasBeforeGame/></div>\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    gameStatus: state.App.gameStatus\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Field);\r\n","import {CARD_CLOSE} from './components/AppCard';\r\n\r\nfunction randomInteger(min, max) {\r\n  let rand = min + Math.random() * (max - min);\r\n  return Math.floor(rand);\r\n}\r\n\r\nfunction decToHex(n) {\r\n  return Number(n).toString(16);\r\n}\r\n\r\nfunction shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction generateCarts(sizeX, sizeY){\r\n  let colors = new Set();\r\n  while(colors.size !== sizeX*sizeY/2){\r\n    colors = colors.add(\"#\" +\r\n      decToHex(randomInteger(1, 7) * 32)\r\n       + decToHex(randomInteger(1, 7) * 32)\r\n       + decToHex(randomInteger(1, 7) * 32)\r\n     );\r\n  }\r\n  let position = shuffle([...colors, ...colors]);\r\n\r\n  let cards = new Map();\r\n  for (let i = 0; i < position.length; i++) {\r\n    cards.set(i, {id:i, color:position[i], cardState:CARD_CLOSE})\r\n  }\r\n  return cards;\r\n}\r\n\r\nexport default generateCarts;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport generateCarts from './createCards';\r\n\r\nimport {CARD_OPEN, CARD_CLOSE, CARD_DELETED, CARD_DELETING,\r\n   CARD_CLOSING} from './components/AppCard';\r\n\r\nimport {EASY, MEDIUM, HARD} from './components/Difficulty';\r\n\r\nimport {CHANGE_DIFFICULT, CHANGE_TIME, CHANGE_GAME_STATUS,\r\n   CREATE_NEW_CARDS, CHANGE_CARD_STATE} from './actions';\r\n\r\n\r\nlet init_app_state = {difficult:'easy', score:0, gameStatus:false,\r\n sizeX:3, sizeY:4, time:0, startTime: null, cards: new Map()};\r\n\r\nfunction App(state=init_app_state, action){\r\n  let newState = {...state};\r\n  if(state.cards.size){\r\n    newState.cards = new Map(Array.from(state.cards.entries()));\r\n  }\r\n  else{\r\n    newState.cards = new Map();\r\n  }\r\n\r\n  switch (action.type) {\r\n\r\n    case CHANGE_DIFFICULT:\r\n      newState.difficult = action.difficult;\r\n      switch(action.difficult){\r\n        case EASY:\r\n          newState.sizeX = 3;\r\n          newState.sizeY = 4;\r\n          break;\r\n        case MEDIUM:\r\n          newState.sizeX = 5;\r\n          newState.sizeY = 4;\r\n          break;\r\n        case HARD:\r\n          newState.sizeX = 5;\r\n          newState.sizeY = 6;\r\n          break;\r\n        default:\r\n          return state;\r\n      }\r\n      return newState;\r\n\r\n    case CHANGE_TIME:\r\n      newState.time = action.time;\r\n      return newState;\r\n\r\n    case CHANGE_GAME_STATUS:\r\n      if(newState.gameStatus !== action.onGame)\r\n      {\r\n        if(action.onGame){\r\n          newState.startTime = new Date()-1;\r\n          newState.score = 0;\r\n        }\r\n        else{\r\n          localStorage.setItem('lastGameScore', newState.score);\r\n          localStorage.setItem('lastGameTime', newState.time);\r\n          if(localStorage.getItem('bestGameScore') < newState.score){\r\n            localStorage.setItem('bestGameScore', newState.score);\r\n          }\r\n          newState.score = 0;\r\n          newState.startTime = null;\r\n          newState.time = 0;\r\n        }\r\n        newState.gameStatus = action.onGame;\r\n        return newState;\r\n      }\r\n      return state;\r\n\r\n    case CREATE_NEW_CARDS:\r\n      newState.cards = generateCarts(newState.sizeX, newState.sizeY);\r\n      return newState;\r\n\r\n    case CHANGE_CARD_STATE:\r\n      if(newState.cards.get(action.id).cardState === CARD_DELETING){\r\n        newState.cards.get(action.id).cardState = CARD_DELETED;\r\n        return newState;\r\n      }\r\n      if(newState.cards.get(action.id).cardState === CARD_CLOSING){\r\n        newState.cards.get(action.id).cardState = CARD_CLOSE;\r\n        return newState;\r\n      }\r\n\r\n      let opened = null;\r\n      for(let card of newState.cards.values()) {\r\n        if(card.cardState === CARD_OPEN){\r\n          opened = card;\r\n        }\r\n      }\r\n      if(opened){\r\n        if(opened.id === action.id){\r\n          return newState;\r\n        }\r\n        if(opened.color === newState.cards.get(action.id).color){\r\n          newState.score = newState.score + Math.round(50/Math.sqrt(newState.time)) + 10;\r\n          newState.cards.get(opened.id).cardState = CARD_DELETING;\r\n          newState.cards.get(action.id).cardState = CARD_DELETING;\r\n\r\n        }\r\n        else{\r\n          newState.cards.get(opened.id).cardState = CARD_CLOSING;\r\n          newState.cards.get(action.id).cardState = CARD_CLOSING;\r\n        }\r\n      }\r\n      else{\r\n        newState.cards.get(action.id).cardState = CARD_OPEN;\r\n      }\r\n      return newState;\r\n\r\n    default:\r\n      return state\r\n    }\r\n}\r\n\r\nconst MemoApp = combineReducers({\r\n  App\r\n})\r\n\r\nexport default MemoApp;\r\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport Header from './components/Header';\nimport Field from './components/Field';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport MemoApp from './reducers';\n\nconst store = createStore(MemoApp);\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Container\n        style={{height:'100%', display:'flex', flexDirection:'column'}}\n        fixed\n      >\n\n        <Header/>\n        <Field/>\n\n      </Container>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}